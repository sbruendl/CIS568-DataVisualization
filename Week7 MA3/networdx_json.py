# -*- coding: utf-8 -*-
"""NetwordX_JSON.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OcnlgVMj3WVSzikTNhNs-tad5QwXMjAG
"""

import pandas as pd
import networkx as nx
import json
pd.set_option('display.max_columns', None)
import matplotlib.pyplot as plt
import pprint

df = pd.read_csv("https://raw.githubusercontent.com/umassdgithub/Week-8-part-1/main/data/data_scopus.csv")
## drop the rows with no Author Affiliations

df= df[~pd.isnull(df['Authors with affiliations'])].copy()

df.head(2)

def get_first_author_affilation(x):
  try:
    return x.split(";")[0].split(",")[-1].strip()
  except Exception as ex:
    print(x)
df['First_author_Country']=df['Authors with affiliations'].apply(get_first_author_affilation)

df['First_author_Country']

df.Year.hist()

df["Source title"].value_counts().reset_index()

nodes = df['EID'].values
df = df.fillna(0)

df['Year'].max()

G = nx.Graph()

nodes = []
for row in df.iterrows():
  nodes.append((row[1]['EID'],{
      "Title": row[1]['Title'],
      "Year" : row[1]['Year'],
      "Citations" : row[1]['Cited by'],
      "Publisher" : row[1]['Publisher'],
  }))

len(nodes)

nodes[0]

G.add_nodes_from(nodes)

edges = []
for row in df.iterrows():
  current_paper = row[1]['EID']
  if ";" in row[1]['Author(s) ID']: 
    authors = row[1]['Author(s) ID'][:-1].split(";")
    for author in authors:
      papers = df[df['Author(s) ID'].str.contains(author)]['EID'].values
      if len(papers)>0:
        for paper in papers:
          if paper != current_paper:
            edges.append((current_paper,paper))
  else:
    continue



G.add_edges_from(edges)

#pos = nx.drawing.circular_layout(G)
pos = nx.spring_layout(G)

nx.draw(G,pos=pos, node_size=40,alpha=.2)

from networkx.readwrite import json_graph

with open("publication_network.json",'w') as f:
  json.dump(json_graph.node_link_data(G),f)

nx.write_gml(G,"network.gml")

